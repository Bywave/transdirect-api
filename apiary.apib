FORMAT: X-1A
HOST: https://api.transdirect.com.au/

# Transdirect Public API V3

This is a WIP API for Transdirect.

Authentication is via HTTP basic authentication. API is only accessible via HTTPS.

Error codes: 200 201 304 400 401 403 404 415 500

Formats: JSON only including input - 415 error on invalid content types.

All times are in ISO8601 format.

# Group Bookings
Get a quick quote, this will return a booking id that can be further updated with sender, receiver and other shipping options

# Booking [/bookings{?since,sort}]


## Create a booking or get a quick quote [POST]
At a minimum the body must contain the fields below. Following creation you can update the booking from the returned booking id by using the PUT or PATCH methods.

The `country` field in `from`/`to` is set to "AU" by default.

+ Request (application/json)

    + Body 
        
        ```js
        {
            "insurance_value" : 10000,
            "items": [
                {
                    "weight": 100,
                    "height": 100,
                    "width": 100,
                    "depth": 100,
                    "quantity": 1,
                    "unit": "pallet"
                },
                {
                    "weight": 10,
                    "height": 10,
                    "width": 10,
                    "depth": 10,
                    "quantity": 5,
                    "unit": "carton"
                }  
            ],
            "sender": {
                "country" : "AU",
                "post_code": "2000",
                "type": "residential"
            },
            "receiver": {
                "country" : "AU",
                "post_code": "3000",
                "type": "business"
            }
        }
        ```

+ Response 201 (application/json)

    + Headers  
    
        ```
        Location: /bookings/232456
        ```
    
    + Body 
        
        ```js
        {
            "id" : 232456,
            "items" : [
                {
                    "id" : 523456,
                    "weight" : 100,
                    "height" : 100,
                    "width" : 100,
                    "depth" : 100,
                    "quantity" : 1,
                    "unit" : "pallet"
                },
                {
                    "id" : 523459,
                    "weight" : 10,
                    "height" : 10,
                    "width" : 10,
                    "depth" : 10,
                    "quantity" : 5,
                    "unit" : "carton"
                }  
            ],
            "notifications": {
                "email": true,
                "sms": false
            },
            "sender": {
                "country" : "AU",
                "post_code": "2000",
                "type": "residential"
            },
            "receiver": {
                "country" : "AU",
                "post_code": "3000",
                "type": "business"
            },
            "quotes": {
                "toll" : 47.87,
                "allied" : 56.97,
                "couriersplease" : 53.65
            },
            "payment": {
                "status": "unpaid"
            },
            "status" : "quoted",
            "created_at" : "2013-10-26T18:24:02Z",
            "updated_at" : "2013-10-26T18:24:02Z"
        }
        ```


## Get all your bookings [GET]

+ Parameters

    + since (optional, string) ... Timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ` Only bookings created at or after this time are returned.
    + sort (optional, string) ... The sort order of the bookings returned. Default is `created_at`, options are `price`, `updated_at`. Add `-` before value for reverse sort, e.g. `-created_at`.
    
+ Response 201 (application/json)

    + Body 
        
        ```js
        {
            fill in this later with array of bookings...
        }
        ```
    




# Booking [/bookings/{id}]
Notes: Do we want to use UTC? Do we want receipt code in response?
Statuses: quoted, booked, paid, confirmed, picked-up, in-transit, delivered, rejected?
Headers: Link headers?
Changes: after it's been paid only TD staff can modify the order, otherwise it's locked

+ Parameters

    + id (required, integer) ... Id of the booking.
 
+ Model (application/json)

    JSON representation of Booking Resource.

    + Headers

            Link: <http:/api.gistfox.com/gists/42/star>;rel="self"

    + Body

        ```js
        {
            "id" : 232456,
            "booked_at" : "2013-10-26T18:28:02Z",
            "booked_by" : "receiver",
            "connote" : 1258993,
            "charged_weight" : 22.5958,
            "created_at" : "2013-10-26T18:24:02Z",
            "dangerous_goods" : false,
            "declared_value" : 2500,
            "insurance_value": 1500,
            "description" : "Timber Tv unit",            
            "items" : [
                {
                    "id" : 523456,
                    "weight" : 100,
                    "height" : 100,
                    "width" : 100,
                    "depth" : 100,
                    "quantity" : 1,
                    "unit" : "pallet"
                },
                {
                    "id" : 523459,
                    "weight" : 10,
                    "height" : 10,
                    "width" : 10,
                    "depth" : 10,
                    "quantity" : 5,
                    "unit" : "carton"
                }  
            ],
            "label" : "https://api.transdirect.com.au/bookings/232456/label",
            "notifications": {
                "email": true,
                "sms": false
            },
            "payment": {
                "status": "paid",
                "receipt" : "6TU89567LC691552C",
                "paid_at" : "2013-13-26T13:23:12Z"
            },
            "pickup_window" : {
                "start" : "2013-13-26T13:00:00Z",
                "end" : "2013-13-26T17:00:00Z"
            },
            "quotes": {
                "toll" : 47.87,
                "allied" : 56.97,
                "couriersplease" : 53.65
            },
            "receiver": {
                "id" : 123456,
                "address" : "1 Main Street",
                "country" : "AU",
                "email" : "test1@example.com",
                "name" : "Test User",
                "phone" : "0400 000 000",
                "post_code": "3000",
                "state" : "VIC",
                "suburb" : "MELBOURNE",
                "type": "business"
            },
            "scanned_weight" : 23,
            "sender": {
                "id" : 123455,
                "address" : "1 Main Street",
                "country" : "AU",
                "email" : "test1@example.com",
                "name" : "Test User",
                "phone" : "0400 000 000",
                "post_code": "2000",
                "state" : "NSW",
                "suburb" : "SYDNEY",
                "type": "residential"
            },
            "special_instructions" : "FRAGILE If delivery unattended, call Transdirect on 1300 668 229 to arrange redelivery details.",
            "status" : "confirmed",
            "updated_at" : "2013-10-26T18:24:02Z"
        }
        ```        

## Get a single booking [GET]

+ Response 200

    [Booking][]
    
## Update a booking [PUT]

+ Request (application/json)

    [Booking][]

+ Response 200

    [Booking][]

## Partially update a booking [PATCH]

+ Request (application/json)

    + Body 
        
        ```js
        {
            "id" : 232456,
            "description" : "New description"
        }
        ```
        
+ Response 200

    [Booking][]

# Booking Item Collection [/bookings/{id}/items]

+ Parameters

    + id (required, integer) ... Id of the booking.
 
+ Model (application/json)

    JSON representation of Item Resource.

    + Body

        ```
        [
            {
                "id" : 523459,
                "weight" : 10,
                "height" : 10,
                "width" : 10,
                "depth" : 10,
                "quantity" : 5,
                "unit" : "carton"
            },
            {
                "id" : 523471,
                "weight" : 10,
                "height" : 10,
                "width" : 10,
                "depth" : 10,
                "quantity" : 2,
                "unit" : "carton"
            }
        ]
        ```

## Get all items in a booking [GET]

+ Response 200

    [Booking Item Collection][]

## Add an item to a booking [POST]

+ Response 201

    [Booking Item Collection][]






# Booking Item [/bookings/{id}/items/{item_id}]

+ Parameters

    + id (required, integer) ... Id of the booking.
    + item_id (required, integer) ... Id of the item.
 
+ Model (application/json)

    JSON representation of Item Resource.

    + Body

        ```
        {
            "id" : 523459,
            "weight" : 10,
            "height" : 10,
            "width" : 10,
            "depth" : 10,
            "quantity" : 5,
            "unit" : "carton"
        }
        ```

## Get an item [GET]
+ Response 200

    [Booking Item][]

## Update an item [PUT]

+ Response 200

    [Booking Item][]

## Partially update an item [PATCH]

+ Response 200

    [Booking Item][]

## Remove an item from a booking [DELETE]

+ Response 204





# Booking Label [/bookings/{id}/label]

+ Parameters

    + id (required, integer) ... Id of the booking.

## Get the PDF label for a booking [GET]

+ Response 200 (application/pdf)
 
    + Headers  
    
        ```
        Content-Disposition: attachment; filename="label.pdf"
        ```
    
    + Body 
    
       ```
       JVBERi0xLjIgDQol4uPP0w0KIA0KOSAwIG9iag0KPDwNCi9MZW5ndGggMTAgMCBSDQovRmlsdGVyIC9GbGF0ZURlY29kZSANCj4+DQpzdHJlYW0NCkiJzZDRSsMwFIafIO/we6eyZuckTZPtbtIWBi0UjYKQGxFbJmpliuLb26QM8X6CJBfJyf99ycmFF6xJagWrrMxzwJeCEMd+gFjWBC1dLPeCJFkbl/fTKfwnTqt1CK0xIZyEwFYZ2T+fwT8KnmIxUmJinNKJyUiyW7mZVEQ6I54m2K3ZzFiupvgPaee7JHFuZqyDvxuGBbZdu8D1y+7jYf+2e//C2KOJm9dxfEqqTHMRXZlR0hRJuKwZau6EJa+MOdjpYN/gprq8xVW7aRp0ZY162ySbktoWvxpPZULGxJLSr+G4UuX+QHrcl/rz/2eqvPgGPPWhqg0KZW5kc3RyZWFtDQplbmRvYmoNCjEwIDAgb2JqDQoyNDYNCmVuZG9iag0KNCAwIG9iag0KPDwNCi9UeXBlIC9QYWdlDQovUGFyZW50IDUgMCBSDQovUmVzb3VyY2VzIDw8DQovRm9udCA8PA0KL0YwIDYgMCBSIA0KL0YxIDcgMCBSIA0KPj4NCi9Qcm9jU2V0IDIgMCBSDQo+Pg0KL0NvbnRlbnRzIDkgMCBSDQo+Pg0KZW5kb2JqDQo2IDAgb2JqDQo8PA0KL1R5cGUgL0ZvbnQNCi9TdWJ0eXBlIC9UcnVlVHlwZQ0KL05hbWUgL0YwDQovQmFzZUZvbnQgL0FyaWFsDQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZw0KPj4NCmVuZG9iag0KNyAwIG9iag0KPDwNCi9UeXBlIC9Gb250DQovU3VidHlwZSAvVHJ1ZVR5cGUNCi9OYW1lIC9GMQ0KL0Jhc2VGb250IC9Cb29rQW50aXF1YSxCb2xkDQovRmlyc3RDaGFyIDMxDQovTGFzdENoYXIgMjU1DQovV2lkdGhzIFsgNzUwIDI1MCAyNzggNDAyIDYwNiA1MDAgODg5IDgzMyAyMjcgMzMzIDMzMyA0NDQgNjA2IDI1MCAzMzMgMjUwIA0KMjk2IDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCAyNTAgMjUwIDYwNiA2MDYgNjA2IA0KNDQ0IDc0NyA3NzggNjY3IDcyMiA4MzMgNjExIDU1NiA4MzMgODMzIDM4OSAzODkgNzc4IDYxMSAxMDAwIDgzMyANCjgzMyA2MTEgODMzIDcyMiA2MTEgNjY3IDc3OCA3NzggMTAwMCA2NjcgNjY3IDY2NyAzMzMgNjA2IDMzMyA2MDYgDQo1MDAgMzMzIDUwMCA2MTEgNDQ0IDYxMSA1MDAgMzg5IDU1NiA2MTEgMzMzIDMzMyA2MTEgMzMzIDg4OSA2MTEgDQo1NTYgNjExIDYxMSAzODkgNDQ0IDMzMyA2MTEgNTU2IDgzMyA1MDAgNTU2IDUwMCAzMTAgNjA2IDMxMCA2MDYgDQo3NTAgNTAwIDc1MCAzMzMgNTAwIDUwMCAxMDAwIDUwMCA1MDAgMzMzIDEwMDAgNjExIDM4OSAxMDAwIDc1MCA3NTAgDQo3NTAgNzUwIDI3OCAyNzggNTAwIDUwMCA2MDYgNTAwIDEwMDAgMzMzIDk5OCA0NDQgMzg5IDgzMyA3NTAgNzUwIA0KNjY3IDI1MCAyNzggNTAwIDUwMCA2MDYgNTAwIDYwNiA1MDAgMzMzIDc0NyA0MzggNTAwIDYwNiAzMzMgNzQ3IA0KNTAwIDQwMCA1NDkgMzYxIDM2MSAzMzMgNTc2IDY0MSAyNTAgMzMzIDM2MSA0ODggNTAwIDg4OSA4OTAgODg5IA0KNDQ0IDc3OCA3NzggNzc4IDc3OCA3NzggNzc4IDEwMDAgNzIyIDYxMSA2MTEgNjExIDYxMSAzODkgMzg5IDM4OSANCjM4OSA4MzMgODMzIDgzMyA4MzMgODMzIDgzMyA4MzMgNjA2IDgzMyA3NzggNzc4IDc3OCA3NzggNjY3IDYxMSANCjYxMSA1MDAgNTAwIDUwMCA1MDAgNTAwIDUwMCA3NzggNDQ0IDUwMCA1MDAgNTAwIDUwMCAzMzMgMzMzIDMzMyANCjMzMyA1NTYgNjExIDU1NiA1NTYgNTU2IDU1NiA1NTYgNTQ5IDU1NiA2MTEgNjExIDYxMSA2MTEgNTU2IDYxMSANCjU1NiBdDQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZw0KL0ZvbnREZXNjcmlwdG9yIDggMCBSDQo+Pg0KZW5kb2JqDQo4IDAgb2JqDQo8PA0KL1R5cGUgL0ZvbnREZXNjcmlwdG9yDQovRm9udE5hbWUgL0Jvb2tBbnRpcXVhLEJvbGQNCi9GbGFncyAxNjQxOA0KL0ZvbnRCQm94IFsgLTI1MCAtMjYwIDEyMzYgOTMwIF0NCi9NaXNzaW5nV2lkdGggNzUwDQovU3RlbVYgMTQ2DQovU3RlbUggMTQ2DQovSXRhbGljQW5nbGUgMA0KL0NhcEhlaWdodCA5MzANCi9YSGVpZ2h0IDY1MQ0KL0FzY2VudCA5MzANCi9EZXNjZW50IDI2MA0KL0xlYWRpbmcgMjEwDQovTWF4V2lkdGggMTAzMA0KL0F2Z1dpZHRoIDQ2MA0KPj4NCmVuZG9iag0KMiAwIG9iag0KWyAvUERGIC9UZXh0ICBdDQplbmRvYmoNCjUgMCBvYmoNCjw8DQovS2lkcyBbNCAwIFIgXQ0KL0NvdW50IDENCi9UeXBlIC9QYWdlcw0KL01lZGlhQm94IFsgMCAwIDYxMiA3OTIgXQ0KPj4NCmVuZG9iag0KMSAwIG9iag0KPDwNCi9DcmVhdG9yICgxNzI1LmZtKQ0KL0NyZWF0aW9uRGF0ZSAoMS1KYW4tMyAxODoxNVBNKQ0KL1RpdGxlICgxNzI1LlBERikNCi9BdXRob3IgKFVua25vd24pDQovUHJvZHVjZXIgKEFjcm9iYXQgUERGV3JpdGVyIDMuMDIgZm9yIFdpbmRvd3MpDQovS2V5d29yZHMgKCkNCi9TdWJqZWN0ICgpDQo+Pg0KZW5kb2JqDQozIDAgb2JqDQo8PA0KL1BhZ2VzIDUgMCBSDQovVHlwZSAvQ2F0YWxvZw0KL0RlZmF1bHRHcmF5IDExIDAgUg0KL0RlZmF1bHRSR0IgIDEyIDAgUg0KPj4NCmVuZG9iag0KMTEgMCBvYmoNClsvQ2FsR3JheQ0KPDwNCi9XaGl0ZVBvaW50IFswLjk1MDUgMSAxLjA4OTEgXQ0KL0dhbW1hIDAuMjQ2OCANCj4+DQpdDQplbmRvYmoNCjEyIDAgb2JqDQpbL0NhbFJHQg0KPDwNCi9XaGl0ZVBvaW50IFswLjk1MDUgMSAxLjA4OTEgXQ0KL0dhbW1hIFswLjI0NjggMC4yNDY4IDAuMjQ2OCBdDQovTWF0cml4IFswLjQzNjEgMC4yMjI1IDAuMDEzOSAwLjM4NTEgMC43MTY5IDAuMDk3MSAwLjE0MzEgMC4wNjA2IDAuNzE0MSBdDQo+Pg0KXQ0KZW5kb2JqDQp4cmVmDQowIDEzDQowMDAwMDAwMDAwIDY1NTM1IGYNCjAwMDAwMDIxNzIgMDAwMDAgbg0KMDAwMDAwMjA0NiAwMDAwMCBuDQowMDAwMDAyMzYzIDAwMDAwIG4NCjAwMDAwMDAzNzUgMDAwMDAgbg0KMDAwMDAwMjA4MCAwMDAwMCBuDQowMDAwMDAwNTE4IDAwMDAwIG4NCjAwMDAwMDA2MzMgMDAwMDAgbg0KMDAwMDAwMTc2MCAwMDAwMCBuDQowMDAwMDAwMDIxIDAwMDAwIG4NCjAwMDAwMDAzNTIgMDAwMDAgbg0KMDAwMDAwMjQ2MCAwMDAwMCBuDQowMDAwMDAyNTQ4IDAwMDAwIG4NCnRyYWlsZXINCjw8DQovU2l6ZSAxMw0KL1Jvb3QgMyAwIFINCi9JbmZvIDEgMCBSDQovSUQgWzw0NzE0OTUxMDQzM2RkNDg4MmYwNWY4YzEyNDIyMzczND48NDcxNDk1MTA0MzNkZDQ4ODJmMDVmOGMxMjQyMjM3MzQ+XQ0KPj4NCnN0YXJ0eHJlZg0KMjcyNg0KJSVFT0YNCg==
        ```

# Booking Payment [/bookings/{id}/payment]

+ Parameters

    + id (required, integer) ... Id of the booking.



# Booking confirmation [/bookings/{id}/confirm]



# Group Members

# Member [/member]

## Get the currently authenticated member [GET]

+ Response 200 (application/json)
    
    + Body
        
        ```
        {
            "name": "John Smith",
            "company": "Test Company",
            "email": "john@example.com",
            "address": "",
            "suburb": "",
            "post_code": "",
            "state": "NSW",
            "phone": "02 9999 9999",
            "discount_factor": 0.05,
            "credit_limit": 5000,
            "credit_limit_available": 4355.34,
            "charge_type": "invoice",
            "terms": 30,
            "active": true
        }
        ```


# Group Locations
A location is a unique postcode/suburb combination. A suburb might have multiple locations with different post_codes and similarly a post_code will have many locations for each suburb within the post_code.

# Locations [/locations]

## Get all locations [GET]
+ Response 200 (application/json)

    + Headers
    
        ```
        Link: <https://api.transdirect.com.com/locations?offset=100&limit=100>; rel="next", <https://api.transdirect.com.au/locations?offset=21000&limit=100>; rel="last"
        X-Total-Count: 24564
        ```

    + Body
    
        ```js
        [
            {
                "locality": "SYDNEY",
                "pcode": "1001",
                "state": "NSW"
            },
            {
                "locality": "SYDNEY",
                "pcode": "1002",
                "state": "NSW"
            },
            {
                "locality": "SYDNEY",
                "pcode": "1003",
                "state": "NSW"
            },
            {
                "locality": "SYDNEY",
                "pcode": "1004",
                "state": "NSW"
            },
            {
                "locality": "SYDNEY",
                "pcode": "1005",
                "state": "NSW"
            }
        ]
        ```

# Group Search Locations

# Search Locations [/locations{?q}]

## Search locations [GET]

+ Parameters

    + q (required, string) ... Search term. This will be matched on postcode or suburb name.
    
+ Response 200 (application/json)
    
    + Headers
    
        ```
        Link: <https://api.transdirect.com.com/locations?offset=100&limit=100>; rel="next", <https://api.transdirect.com.au/locations?offset=200&limit=100>; rel="last"
        X-Total-Count: 254
        ```

    + Body
    
        ```js
        [
            {
                "locality": "SYDNEY",
                "pcode": "1001",
                "state": "NSW"
            },
            {
                "locality": "SYDNEY",
                "pcode": "1002",
                "state": "NSW"
            },
            {
                "locality": "SYDNEY",
                "pcode": "1003",
                "state": "NSW"
            },
            {
                "locality": "SYDNEY",
                "pcode": "1004",
                "state": "NSW"
            },
            {
                "locality": "SYDNEY",
                "pcode": "1005",
                "state": "NSW"
            }
        ]
        ```


# Locations within a postcode [/locations/post_code/{postCode}]
Get all locations available. Please note this data is for use in typeaheads etc and may not be 100% accurate for all 
couriers as each has their own post_code and suburb data.

+ Parameters

    + postCode (required, string) ... Post code to search for locations.

## Get all locations within a postcode [GET]

+ Response 200 (application/json)
    
    + Headers
    
        ```
        Link: <https://api.transdirect.com.com/locations?offset=100&limit=100>; rel="next", <https://api.transdirect.com.au/locations?offset=200&limit=100>; rel="last"
        X-Total-Count: 254
        ```

    + Body

        ```
        [
            {
                "locality": "BARANGAROO",
                "pcode": "2000",
                "state": "NSW"
            },
            {
                "locality": "DAWES POINT",
                "pcode": "2000",
                "state": "NSW"
            },
            {
                "locality": "HAYMARKET",
                "pcode": "2000",
                "state": "NSW"
            },
            {
                "locality": "MILLERS POINT",
                "pcode": "2000",
                "state": "NSW"
            },
            {
                "locality": "PARLIAMENT HOUSE",
                "pcode": "2000",
                "state": "NSW"
            },
            {
                "locality": "SYDNEY",
                "pcode": "2000",
                "state": "NSW"
            },
            {
                "locality": "SYDNEY SOUTH",
                "pcode": "2000",
                "state": "NSW"
            },
            {
                "locality": "THE ROCKS",
                "pcode": "2000",
                "state": "NSW"
            }
        ]
        ```


